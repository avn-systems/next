{"version":3,"file":"static/webpack/static/development/pages/_app.js.7ff795f14edb49c78a26.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, {Container} from 'next/app'\nimport { PureComponent } from 'react'\nimport NProgress from 'nprogress'\nimport Router from 'next/router'\nimport Link from 'next/link'\n\nimport Avatar from 'react-md/lib/Avatars'\nimport Button from 'react-md/lib/Buttons/Button'\nimport FontIcon from 'react-md/lib/FontIcons'\nimport ListItem from 'react-md/lib/Lists/ListItem'\nimport NavigationDrawer from 'react-md/lib/NavigationDrawers'\nimport SelectField from 'react-md/lib/SelectFields'\n\nRouter.events.on('routeChangeStart', (url) => {\n  console.log(`Loading: ${url}`)\n  NProgress.start()\n})\nRouter.events.on('routeChangeComplete', () => NProgress.done())\nRouter.events.on('routeChangeError', () => NProgress.done())\n\nconst avatarSrc = 'https://cloud.githubusercontent.com/assets/13041/19686250/971bf7f8-9ac0-11e6-975c-188defd82df1.png'\n\nconst drawerHeaderChildren = [\n  <Avatar\n    style={{ alignSelf: 'center', marginLeft: 12, marginRight: 5, flexShrink: 0 }}\n    key={avatarSrc} src={avatarSrc}\n    role='presentation'\n    iconSized\n  />,\n  <SelectField\n    position={SelectField.Positions.BELOW}\n    className='md-select-field--toolbar'\n    menuItems={['Jonathan', 'Fred']}\n    defaultValue='Jonathan'\n    key='account-switcher'\n    id='account-switcher'\n  />\n]\n\nconst toolbarActions = [\n    <Button icon\n      tooltipDelay={150} tooltipPosition='center'\n    >star</Button>,\n    <Button icon tooltipLabel='Share this page'\n      tooltipDelay={150} tooltipPosition='left'\n    >share</Button>\n]\n\nclass NavigationLink extends PureComponent {\n  render () {\n    const { href, as, children, ..._props } = this.props\n    return (\n      <div {..._props} style={{padding: 0}}>\n        <Link href={href} as={as}>\n          <a className='md-list-tile md-list-tile--mini' style={{width: '100%', overflow: 'hidden'}}>\n            {children}\n          </a>\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default class MyApp extends App {\n  static async getInitialProps ({ Component, router, ctx }) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return {pageProps}\n  }\n  \n  componentDidMount () {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker\n        .register(process.env.BACKEND_URL +'/service-worker.js')\n        .then(registration => {\n          console.log('service worker registration successful')\n        })\n        .catch(err => {\n          console.warn('service worker registration failed', err.message)\n        })\n    }\n  }\n\n  render () {\n    const {Component, pageProps} = this.props\n    return (\n      <Container>\n        <NavigationDrawer\n          navItems={[\n            <ListItem\n              key='0'\n              component={NavigationLink}\n              href='/' as={ process.env.BACKEND_URL + `/`}\n              leftIcon={<FontIcon>inbox</FontIcon>}\n              tileClassName='md-list-tile--mini'\n              primaryText={'Home'}\n            />,\n            <ListItem\n              key='1'\n              component={NavigationLink}\n              href='/about' as={ process.env.BACKEND_URL + `/about`}\n              leftIcon={<FontIcon>info</FontIcon>}\n              tileClassName='md-list-tile--mini'\n              primaryText={'About'}\n            />,\n            <ListItem\n              key='2'\n              component={NavigationLink}\n              href='/tvmaze' as={ process.env.BACKEND_URL + `/tvmaze`}\n              leftIcon={<FontIcon>tv</FontIcon>}\n              tileClassName='md-list-tile--mini'\n              primaryText={'TV Maze'}\n            />\n          ]}\n          contentClassName='md-grid'\n          drawerHeaderChildren={drawerHeaderChildren}\n          mobileDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n          tabletDrawerType={NavigationDrawer.DrawerTypes.PERSISTENT_MINI}\n          desktopDrawerType={NavigationDrawer.DrawerTypes.PERSISTENT_MINI}\n          toolbarTitle='Hello, World!'\n          toolbarActions={toolbarActions}\n        >\n          <Component {...pageProps} />\n        </NavigationDrawer>\n      </Container>\n    )\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAZA;AACA;AAcA;;;;;;;;;;;;;AAWA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;AAlEA;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AATA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}